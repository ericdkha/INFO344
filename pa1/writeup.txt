To start this assignment, I had to first set up my AWS EC2 instance as well as my RDS instance. This process took a bit longer than I had originally hoped. Many errors came from trying to figure out how to navigate my EC2 instance and changing permissions to be able to upload everything correctly. After many Google searches latter, I had everything set up. I began the assignemnt by loading the data from the csv file into MySQL Workbench, this process was pretty straightforward. The only hiccup I ran into was the format of the csv file, there were some weird characters in it that MySQL Workbench did not like. 

After loading the data, I began creating the website itself. To connect to my databse, I used PDO in PHP. After i connected to my database, i created several pages that the user might interact with, such as the landing page, the results page, an error page, etc. To query for a player's data, I provided a form that users can enter the player's name and that would take the user to the results page if a player was found in the database. Users can enter either the player's first or last name, casing doesn't matter, and the player's statistic would pop up. If more than one player is returned from the database (i.e if the user searches just 'james'), then the user would see a list of choices that were returned and then they would be able to choose the player they were interested in. Format-wise, the code is pretty intertwined, i do not have a separate php file connected to the database, rather I have a 'common.php' file that includes similar code throughout the website, and that is what connects to the database. Structually, It makes since to separate code out the way that i did.

Focusing in on the User Experience, I wanted to create a website with a very minimalistic and familiar feel to it. The website has a basic header that shows the user that they are still on the correct website while navigating through it. I provided a search bar on the landing page and almost nothing else to emulate a search engine-type set up. When the results for a player is shown, I tried to keep a simple view where a user could scroll through the different statistics for a specific player and provide a some knowledge on the player's team. If multiple players were returned from the user's query, I displayed all the possible options, based on the users query, to let them decide which player they really wanted. I have also added the player's team to make it easier for users to decipher which abbreviates referred to which teams