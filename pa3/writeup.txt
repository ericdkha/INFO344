For programming assignment 3, the main requirements were to create a dashboard with relevant data & functionality, create a worker role to crawl websites for the url, title, data and store to an Azure Table storage, write in c# and practice proper use of worker roles, table and queue storage on Azure. This assignment started off easy as we had just finished pa2, which dealt with coding in C#. However, pa3 was a lot harder than pa2, just because there were a lot of “cogs” that I had to figure out how they are all connected. It all didn’t really click for me until I drew out a map of how everything connected to each other and which jobs belonged to which part. I started off creating the webrole with just a start, stop and clear function. As I progressed in the assignment, I had to keep adding functionality to the webrole to help complete certain tasks such as reading from the stats table and searching the url table for a title given a url. The Worker role was the hardest part to code as there were a lot of tasks to be done at different states of the crawler. And even the crawler itself was difficult because there were so many things I had to account for while reading the provided robots.txt file such as the format of the xml pages that were provided or how to run checks to make sure I would be crawling the right items. Both the worker role and web role had to connect and access multiple Azure Tables and Queues and it was rather difficult to figure out some of the tiny details like how to create a table right after deleting it, because with Azure, deleting a table takes a certain amount of time before it can be created again with the same name. My work-around was just to have the table create statement be delayed until Azure was ready to create a new table. After I had my web role and worker role completed (which took a very long time), I began working on the dashboard aspect of the assignment. Thus far, I have had no way of checking if the web role and worker role were doing their jobs correctly. After creating the dashboard.html and js to go with it, I began realizing that a lot more functionality was needed in the web role to communicate information between the dashboard and the Azure Storage objects. Once I got my dashboard sort of working, I ran multiple tests and slowly fixed any errors or bugs that would pop up while running my crawler. Overall, this assignment has been one of the hardest I have ever done in my undergraduate experience. I liked it, however, I wish so more guidance was provided on how to set up certain aspects to avoid hours of just googling around to find a vague answer to a specific problem.
